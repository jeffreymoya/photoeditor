/**
 * Test Data Builders for Playwright Smoke Tests
 *
 * Provides deterministic test data for smoke test scenarios.
 * Anchored to standards/testing-standards.md (Maintainable Test Implementation Heuristics).
 */
// @ts-nocheck


import type { PresignUploadRequest } from '@photoeditor/shared';

export class TestDataBuilder {
  /**
   * Create a valid presign upload request for a single JPEG image
   */
  static presignRequest(): PresignUploadRequest {
    return {
      fileName: 'test-image.jpg',
      contentType: 'image/jpeg',
      fileSize: 1024 * 100, // 100KB
      prompt: 'Make this image more vibrant and colorful',
    };
  }

  /**
   * Create a presign request with invalid content type (should fail validation)
   */
  static invalidContentTypeRequest() {
    return {
      fileName: 'test-document.pdf',
      contentType: 'application/pdf',
      fileSize: 1024 * 100,
    };
  }

  /**
   * Create a presign request with oversized file (should fail validation)
   */
  static oversizedFileRequest() {
    return {
      fileName: 'huge-image.jpg',
      contentType: 'image/jpeg',
      fileSize: 60 * 1024 * 1024, // 60MB (exceeds 50MB limit)
    };
  }

  /**
   * Generate a correlation ID for trace propagation
   */
  static correlationId(): string {
    return `smoke-test-${Date.now()}-${Math.random().toString(36).substring(7)}`;
  }

  /**
   * Create a minimal test image buffer (1x1 pixel JPEG)
   */
  static testImageBuffer(): Buffer {
    // Minimal valid JPEG: 1x1 pixel, red color
    return Buffer.from([
      0xff, 0xd8, 0xff, 0xe0, 0x00, 0x10, 0x4a, 0x46,
      0x49, 0x46, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01,
      0x00, 0x01, 0x00, 0x00, 0xff, 0xdb, 0x00, 0x43,
      0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08,
      0x07, 0x07, 0x07, 0x09, 0x09, 0x08, 0x0a, 0x0c,
      0x14, 0x0d, 0x0c, 0x0b, 0x0b, 0x0c, 0x19, 0x12,
      0x13, 0x0f, 0x14, 0x1d, 0x1a, 0x1f, 0x1e, 0x1d,
      0x1a, 0x1c, 0x1c, 0x20, 0x24, 0x2e, 0x27, 0x20,
      0x22, 0x2c, 0x23, 0x1c, 0x1c, 0x28, 0x37, 0x29,
      0x2c, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1f, 0x27,
      0x39, 0x3d, 0x38, 0x32, 0x3c, 0x2e, 0x33, 0x34,
      0x32, 0xff, 0xc0, 0x00, 0x0b, 0x08, 0x00, 0x01,
      0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0xff, 0xc4,
      0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x03, 0xff, 0xda, 0x00, 0x08,
      0x01, 0x01, 0x00, 0x00, 0x3f, 0x00, 0xfe, 0x8a,
      0x28, 0xff, 0xd9,
    ]);
  }
}
