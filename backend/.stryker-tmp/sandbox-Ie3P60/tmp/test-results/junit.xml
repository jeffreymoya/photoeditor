<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="212" failures="7" errors="0" time="67.305">
  <testsuite name="AppLogger" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="5.903" tests="20">
    <testcase classname="AppLogger Structured Logging - Required Fields should emit structured fields for correlationId" name="AppLogger Structured Logging - Required Fields should emit structured fields for correlationId" time="0.013">
    </testcase>
    <testcase classname="AppLogger Structured Logging - Required Fields should emit structured fields for requestId" name="AppLogger Structured Logging - Required Fields should emit structured fields for requestId" time="0.003">
    </testcase>
    <testcase classname="AppLogger Structured Logging - Required Fields should emit structured fields for jobId" name="AppLogger Structured Logging - Required Fields should emit structured fields for jobId" time="0.002">
    </testcase>
    <testcase classname="AppLogger Structured Logging - Required Fields should emit structured fields for userId" name="AppLogger Structured Logging - Required Fields should emit structured fields for userId" time="0.002">
    </testcase>
    <testcase classname="AppLogger Structured Logging - Required Fields should emit multiple structured fields together" name="AppLogger Structured Logging - Required Fields should emit multiple structured fields together" time="0.003">
    </testcase>
    <testcase classname="AppLogger formatContext - Field Filtering should filter out undefined values from context" name="AppLogger formatContext - Field Filtering should filter out undefined values from context" time="0.003">
    </testcase>
    <testcase classname="AppLogger formatContext - Field Filtering should filter out null values from context" name="AppLogger formatContext - Field Filtering should filter out null values from context" time="0.003">
    </testcase>
    <testcase classname="AppLogger formatContext - Field Filtering should return empty object when context is undefined" name="AppLogger formatContext - Field Filtering should return empty object when context is undefined" time="0.002">
    </testcase>
    <testcase classname="AppLogger Log Levels should log info messages with context" name="AppLogger Log Levels should log info messages with context" time="0.002">
    </testcase>
    <testcase classname="AppLogger Log Levels should log warn messages with context" name="AppLogger Log Levels should log warn messages with context" time="0.003">
    </testcase>
    <testcase classname="AppLogger Log Levels should log error messages with context" name="AppLogger Log Levels should log error messages with context" time="0.028">
    </testcase>
    <testcase classname="AppLogger Log Levels should log debug messages with context" name="AppLogger Log Levels should log debug messages with context" time="0.002">
    </testcase>
    <testcase classname="AppLogger Specialized Logging Methods should log request start with required fields" name="AppLogger Specialized Logging Methods should log request start with required fields" time="0.003">
    </testcase>
    <testcase classname="AppLogger Specialized Logging Methods should log request end with duration" name="AppLogger Specialized Logging Methods should log request end with duration" time="0.002">
    </testcase>
    <testcase classname="AppLogger Specialized Logging Methods should log job status changes" name="AppLogger Specialized Logging Methods should log job status changes" time="0.002">
    </testcase>
    <testcase classname="AppLogger Specialized Logging Methods should log provider calls with success" name="AppLogger Specialized Logging Methods should log provider calls with success" time="0.002">
    </testcase>
    <testcase classname="AppLogger Specialized Logging Methods should log provider calls with failure" name="AppLogger Specialized Logging Methods should log provider calls with failure" time="0.001">
    </testcase>
    <testcase classname="AppLogger Error Handling should extract error information from Error objects" name="AppLogger Error Handling should extract error information from Error objects" time="0.004">
    </testcase>
    <testcase classname="AppLogger Error Handling should handle string errors" name="AppLogger Error Handling should handle string errors" time="0.001">
    </testcase>
    <testcase classname="AppLogger Child Logger should create child logger with persistent context" name="AppLogger Child Logger should create child logger with persistent context" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="GeminiProvider" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.142" tests="25">
    <testcase classname="GeminiProvider Constructor and Configuration should initialize with provided config" name="GeminiProvider Constructor and Configuration should initialize with provided config" time="0.016">
    </testcase>
    <testcase classname="GeminiProvider Constructor and Configuration should apply timeout from PROVIDER_CONFIG when using defaults" name="GeminiProvider Constructor and Configuration should apply timeout from PROVIDER_CONFIG when using defaults" time="0.007">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Success Paths should successfully analyze image with valid request" name="GeminiProvider analyzeImage - Success Paths should successfully analyze image with valid request" time="0.009">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Success Paths should use default prompt when not provided" name="GeminiProvider analyzeImage - Success Paths should use default prompt when not provided" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Success Paths should include correct headers in API request" name="GeminiProvider analyzeImage - Success Paths should include correct headers in API request" time="0.006">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Success Paths should fetch image and convert to base64" name="GeminiProvider analyzeImage - Success Paths should fetch image and convert to base64" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Success Paths should set confidence to 0.7 when finishReason is not STOP" name="GeminiProvider analyzeImage - Success Paths should set confidence to 0.7 when finishReason is not STOP" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Success Paths should include generation config in request" name="GeminiProvider analyzeImage - Success Paths should include generation config in request" time="0.003">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle image fetch failures" name="GeminiProvider analyzeImage - Error Paths should handle image fetch failures" time="0.005">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle Gemini API error responses" name="GeminiProvider analyzeImage - Error Paths should handle Gemini API error responses" time="0.003">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle missing candidates in response" name="GeminiProvider analyzeImage - Error Paths should handle missing candidates in response" time="0.003">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle null candidates in response" name="GeminiProvider analyzeImage - Error Paths should handle null candidates in response" time="0.001">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should return error when provider is disabled" name="GeminiProvider analyzeImage - Error Paths should return error when provider is disabled" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle network errors during image fetch" name="GeminiProvider analyzeImage - Error Paths should handle network errors during image fetch" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle network errors during API call" name="GeminiProvider analyzeImage - Error Paths should handle network errors during API call" time="0.025">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle 401 unauthorized errors" name="GeminiProvider analyzeImage - Error Paths should handle 401 unauthorized errors" time="0.008">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle 500 server errors" name="GeminiProvider analyzeImage - Error Paths should handle 500 server errors" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider analyzeImage - Error Paths should handle JSON parsing errors" name="GeminiProvider analyzeImage - Error Paths should handle JSON parsing errors" time="0.003">
    </testcase>
    <testcase classname="GeminiProvider isHealthy should return true when health endpoint responds successfully" name="GeminiProvider isHealthy should return true when health endpoint responds successfully" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider isHealthy should return false when health endpoint fails" name="GeminiProvider isHealthy should return false when health endpoint fails" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider isHealthy should return false when health endpoint throws error" name="GeminiProvider isHealthy should return false when health endpoint throws error" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider isHealthy should return false when fetch throws non-Error exception" name="GeminiProvider isHealthy should return false when fetch throws non-Error exception" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider getName should return provider name" name="GeminiProvider getName should return provider name" time="0.002">
    </testcase>
    <testcase classname="GeminiProvider Retry Behavior (via BaseProvider) should retry on transient failures and eventually succeed" name="GeminiProvider Retry Behavior (via BaseProvider) should retry on transient failures and eventually succeed" time="0.016">
    </testcase>
    <testcase classname="GeminiProvider Response Metadata should include resilience metadata in response" name="GeminiProvider Response Metadata should include resilience metadata in response" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="AWS Client Factory" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.169" tests="10">
    <testcase classname="AWS Client Factory getAWSEnvironment should detect LocalStack endpoint" name="AWS Client Factory getAWSEnvironment should detect LocalStack endpoint" time="0.011">
    </testcase>
    <testcase classname="AWS Client Factory getAWSEnvironment should detect AWS endpoint URL" name="AWS Client Factory getAWSEnvironment should detect AWS endpoint URL" time="0.002">
    </testcase>
    <testcase classname="AWS Client Factory getAWSEnvironment should return default when no endpoints configured" name="AWS Client Factory getAWSEnvironment should return default when no endpoints configured" time="0.002">
    </testcase>
    <testcase classname="AWS Client Factory createS3Client should create S3 client with default region" name="AWS Client Factory createS3Client should create S3 client with default region" time="0.013">
    </testcase>
    <testcase classname="AWS Client Factory createS3Client should create S3 client with forcePathStyle for LocalStack" name="AWS Client Factory createS3Client should create S3 client with forcePathStyle for LocalStack" time="0.005">
    </testcase>
    <testcase classname="AWS Client Factory createS3Client should accept custom region" name="AWS Client Factory createS3Client should accept custom region" time="0.003">
    </testcase>
    <testcase classname="AWS Client Factory createDynamoDBClient should create DynamoDB client" name="AWS Client Factory createDynamoDBClient should create DynamoDB client" time="0.003">
    </testcase>
    <testcase classname="AWS Client Factory createSQSClient should create SQS client" name="AWS Client Factory createSQSClient should create SQS client" time="0.003">
    </testcase>
    <testcase classname="AWS Client Factory createSNSClient should create SNS client" name="AWS Client Factory createSNSClient should create SNS client" time="0.003">
    </testcase>
    <testcase classname="AWS Client Factory createSSMClient should create SSM client" name="AWS Client Factory createSSMClient should create SSM client" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ConfigService" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.359" tests="9">
    <testcase classname="ConfigService getParameter should retrieve parameter from SSM" name="ConfigService getParameter should retrieve parameter from SSM" time="0.015">
    </testcase>
    <testcase classname="ConfigService getParameter should return null for non-existent parameter" name="ConfigService getParameter should return null for non-existent parameter" time="0.012">
    </testcase>
    <testcase classname="ConfigService getParameter should throw for other errors" name="ConfigService getParameter should throw for other errors" time="0.021">
    </testcase>
    <testcase classname="ConfigService isStubProvidersEnabled should return true when enabled" name="ConfigService isStubProvidersEnabled should return true when enabled" time="0.009">
    </testcase>
    <testcase classname="ConfigService isStubProvidersEnabled should return false when disabled" name="ConfigService isStubProvidersEnabled should return false when disabled" time="0.01">
    </testcase>
    <testcase classname="ConfigService getAnalysisProviderName should return configured provider name" name="ConfigService getAnalysisProviderName should return configured provider name" time="0.016">
    </testcase>
    <testcase classname="ConfigService getAnalysisProviderName should return default when not configured" name="ConfigService getAnalysisProviderName should return default when not configured" time="0.011">
    </testcase>
    <testcase classname="ConfigService getEditingProviderName should return configured provider name" name="ConfigService getEditingProviderName should return configured provider name" time="0.016">
    </testcase>
    <testcase classname="ConfigService getEditingProviderName should return default when not configured" name="ConfigService getEditingProviderName should return default when not configured" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Job Domain Logic" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:06" time="0.174" tests="25">
    <testcase classname="Job Domain Logic createJobEntity should create a valid job entity" name="Job Domain Logic createJobEntity should create a valid job entity" time="0.003">
    </testcase>
    <testcase classname="Job Domain Logic createJobEntity should use default locale when not provided" name="Job Domain Logic createJobEntity should use default locale when not provided" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic createJobEntity should fail when userId is missing" name="Job Domain Logic createJobEntity should fail when userId is missing" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic createBatchJobEntity should create a valid batch job entity" name="Job Domain Logic createBatchJobEntity should create a valid batch job entity" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic createBatchJobEntity should fail when sharedPrompt is missing" name="Job Domain Logic createBatchJobEntity should fail when sharedPrompt is missing" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic createBatchJobEntity should fail when fileCount is not positive" name="Job Domain Logic createBatchJobEntity should fail when fileCount is not positive" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic transitionToProcessing should successfully transition from QUEUED to PROCESSING" name="Job Domain Logic transitionToProcessing should successfully transition from QUEUED to PROCESSING" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic transitionToProcessing should fail when transitioning from invalid state" name="Job Domain Logic transitionToProcessing should fail when transitioning from invalid state" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic transitionToEditing should successfully transition from PROCESSING to EDITING" name="Job Domain Logic transitionToEditing should successfully transition from PROCESSING to EDITING" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic transitionToEditing should fail when transitioning from QUEUED" name="Job Domain Logic transitionToEditing should fail when transitioning from QUEUED" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic transitionToCompleted should successfully transition from EDITING to COMPLETED" name="Job Domain Logic transitionToCompleted should successfully transition from EDITING to COMPLETED" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic transitionToCompleted should fail when transitioning from PROCESSING" name="Job Domain Logic transitionToCompleted should fail when transitioning from PROCESSING" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic transitionToFailed should transition from QUEUED to FAILED" name="Job Domain Logic transitionToFailed should transition from QUEUED to FAILED" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic transitionToFailed should transition from PROCESSING to FAILED" name="Job Domain Logic transitionToFailed should transition from PROCESSING to FAILED" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic transitionToFailed should fail when transitioning from terminal state" name="Job Domain Logic transitionToFailed should fail when transitioning from terminal state" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic calculateBatchProgress should increment progress without completing" name="Job Domain Logic calculateBatchProgress should increment progress without completing" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic calculateBatchProgress should complete batch when all jobs finished" name="Job Domain Logic calculateBatchProgress should complete batch when all jobs finished" time="0.007">
    </testcase>
    <testcase classname="Job Domain Logic calculateBatchProgress should fail when incrementing beyond total" name="Job Domain Logic calculateBatchProgress should fail when incrementing beyond total" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic isJobTerminal should return true for terminal states" name="Job Domain Logic isJobTerminal should return true for terminal states" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic isJobTerminal should return false for non-terminal states" name="Job Domain Logic isJobTerminal should return false for non-terminal states" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic isJobInProgress should return true for in-progress states" name="Job Domain Logic isJobInProgress should return true for in-progress states" time="0.002">
    </testcase>
    <testcase classname="Job Domain Logic isJobInProgress should return false for terminal states" name="Job Domain Logic isJobInProgress should return false for terminal states" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic canAddChildJob should allow adding child jobs to active batch" name="Job Domain Logic canAddChildJob should allow adding child jobs to active batch" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic canAddChildJob should not allow adding child jobs to completed batch" name="Job Domain Logic canAddChildJob should not allow adding child jobs to completed batch" time="0.001">
    </testcase>
    <testcase classname="Job Domain Logic canAddChildJob should not allow adding child jobs to failed batch" name="Job Domain Logic canAddChildJob should not allow adding child jobs to failed batch" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BaseProvider with Resilience Policies" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:06" time="0.33" tests="10">
    <testcase classname="BaseProvider with Resilience Policies Configuration and Initialization should initialize with default resilience config when not provided" name="BaseProvider with Resilience Policies Configuration and Initialization should initialize with default resilience config when not provided" time="0.002">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Configuration and Initialization should initialize with custom resilience config" name="BaseProvider with Resilience Policies Configuration and Initialization should initialize with custom resilience config" time="0.001">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Retry Behavior should retry failed operations and eventually succeed" name="BaseProvider with Resilience Policies Retry Behavior should retry failed operations and eventually succeed" time="0.025">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Retry Behavior should fail after exhausting retries" name="BaseProvider with Resilience Policies Retry Behavior should fail after exhausting retries" time="0.013">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Timeout Behavior should timeout long-running operations" name="BaseProvider with Resilience Policies Timeout Behavior should timeout long-running operations" time="0.103">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Timeout Behavior should complete fast operations successfully" name="BaseProvider with Resilience Policies Timeout Behavior should complete fast operations successfully" time="0.055">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Provider Enabled/Disabled should reject requests when provider is disabled" name="BaseProvider with Resilience Policies Provider Enabled/Disabled should reject requests when provider is disabled" time="0.001">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Response Metadata should include resilience metrics in successful response" name="BaseProvider with Resilience Policies Response Metadata should include resilience metrics in successful response" time="0.002">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Response Metadata should include resilience metrics in failed response" name="BaseProvider with Resilience Policies Response Metadata should include resilience metrics in failed response" time="0.012">
    </testcase>
    <testcase classname="BaseProvider with Resilience Policies Provider Response Structure should return properly structured ProviderResponse" name="BaseProvider with Resilience Policies Provider Response Structure should return properly structured ProviderResponse" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ResiliencePolicyBuilder" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.855" tests="13">
    <testcase classname="ResiliencePolicyBuilder Retry Policy should retry failed operations up to maxAttempts" name="ResiliencePolicyBuilder Retry Policy should retry failed operations up to maxAttempts" time="0.037">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Retry Policy should fail after exhausting retry attempts" name="ResiliencePolicyBuilder Retry Policy should fail after exhausting retry attempts" time="0.079">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Retry Policy should use exponential backoff strategy" name="ResiliencePolicyBuilder Retry Policy should use exponential backoff strategy" time="0.309">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Timeout Policy should timeout long-running operations" name="ResiliencePolicyBuilder Timeout Policy should timeout long-running operations" time="0.106">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Timeout Policy should not timeout fast operations" name="ResiliencePolicyBuilder Timeout Policy should not timeout fast operations" time="0.052">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Circuit Breaker Policy should open circuit after consecutive failures" name="ResiliencePolicyBuilder Circuit Breaker Policy should open circuit after consecutive failures" time="0.003">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Circuit Breaker Policy should track circuit breaker state in metrics" name="ResiliencePolicyBuilder Circuit Breaker Policy should track circuit breaker state in metrics" time="0.001">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Bulkhead Policy should limit concurrent executions when enabled" name="ResiliencePolicyBuilder Bulkhead Policy should limit concurrent executions when enabled" time="0.204">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Bulkhead Policy should not limit concurrency when disabled" name="ResiliencePolicyBuilder Bulkhead Policy should not limit concurrency when disabled" time="0.054">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Default Configuration should use default configuration when not specified" name="ResiliencePolicyBuilder Default Configuration should use default configuration when not specified" time="0.002">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Default Configuration should apply default resilience config values" name="ResiliencePolicyBuilder Default Configuration should apply default resilience config values" time="0.001">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Metrics Collection should track retry attempts in metrics" name="ResiliencePolicyBuilder Metrics Collection should track retry attempts in metrics" time="0.012">
    </testcase>
    <testcase classname="ResiliencePolicyBuilder Metrics Collection should reset metrics between policy executions" name="ResiliencePolicyBuilder Metrics Collection should reset metrics between policy executions" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="status lambda" errors="0" failures="1" skipped="0" timestamp="2025-10-22T08:56:00" time="6.833" tests="5">
    <testcase classname="status lambda parameter validation should return 400 when jobId is missing" name="status lambda parameter validation should return 400 when jobId is missing" time="0.112">
    </testcase>
    <testcase classname="status lambda successful status retrieval should return 200 with job details when job exists" name="status lambda successful status retrieval should return 200 with job details when job exists" time="0.013">
    </testcase>
    <testcase classname="status lambda successful status retrieval should include error field when job has error" name="status lambda successful status retrieval should include error field when job has error" time="0.008">
    </testcase>
    <testcase classname="status lambda not found handling should return 404 when job does not exist" name="status lambda not found handling should return 404 when job does not exist" time="0.009">
    </testcase>
    <testcase classname="status lambda error handling should return 500 on DynamoDB errors" name="status lambda error handling should return 500 on DynamoDB errors" time="0.012">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 500
Received: 404
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/lambdas/status.test.ts:175:35)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
  </testsuite>
  <testsuite name="NotificationService" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.851" tests="7">
    <testcase classname="NotificationService sendJobStatusNotification should publish notification with correct payload for COMPLETED job" name="NotificationService sendJobStatusNotification should publish notification with correct payload for COMPLETED job" time="0.022">
    </testcase>
    <testcase classname="NotificationService sendJobStatusNotification should publish notification with error for FAILED job" name="NotificationService sendJobStatusNotification should publish notification with error for FAILED job" time="0.009">
    </testcase>
    <testcase classname="NotificationService sendJobStatusNotification should include previousStatus in data when provided" name="NotificationService sendJobStatusNotification should include previousStatus in data when provided" time="0.007">
    </testcase>
    <testcase classname="NotificationService sendJobCompletionNotification should publish completion notification" name="NotificationService sendJobCompletionNotification should publish completion notification" time="0.009">
    </testcase>
    <testcase classname="NotificationService sendBatchJobCompletionNotification should publish batch completion notification" name="NotificationService sendBatchJobCompletionNotification should publish batch completion notification" time="0.015">
    </testcase>
    <testcase classname="NotificationService sendBatchJobCompletionNotification should include batch metadata in data" name="NotificationService sendBatchJobCompletionNotification should include batch metadata in data" time="0.006">
    </testcase>
    <testcase classname="NotificationService status messages should return correct message for each status" name="NotificationService status messages should return correct message for each status" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="JobService" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.847" tests="19">
    <testcase classname="JobService createJob should create job with required fields" name="JobService createJob should create job with required fields" time="0.026">
    </testcase>
    <testcase classname="JobService createJob should create job with optional batchJobId" name="JobService createJob should create job with optional batchJobId" time="0.009">
    </testcase>
    <testcase classname="JobService createJob should set TTL to 90 days from now" name="JobService createJob should set TTL to 90 days from now" time="0.013">
    </testcase>
    <testcase classname="JobService getJob should return job when it exists" name="JobService getJob should return job when it exists" time="0.012">
    </testcase>
    <testcase classname="JobService getJob should return null when job does not exist" name="JobService getJob should return null when job does not exist" time="0.011">
    </testcase>
    <testcase classname="JobService updateJobStatus should update status and updatedAt" name="JobService updateJobStatus should update status and updatedAt" time="0.016">
    </testcase>
    <testcase classname="JobService updateJobStatus should update with tempS3Key" name="JobService updateJobStatus should update with tempS3Key" time="0.023">
    </testcase>
    <testcase classname="JobService updateJobStatus should update with finalS3Key" name="JobService updateJobStatus should update with finalS3Key" time="0.014">
    </testcase>
    <testcase classname="JobService updateJobStatus should update with error" name="JobService updateJobStatus should update with error" time="0.013">
    </testcase>
    <testcase classname="JobService updateJobStatus should throw when job does not exist" name="JobService updateJobStatus should throw when job does not exist" time="0.039">
    </testcase>
    <testcase classname="JobService terminal and in-progress status helpers isJobInProgress should return true for QUEUED, PROCESSING, EDITING" name="JobService terminal and in-progress status helpers isJobInProgress should return true for QUEUED, PROCESSING, EDITING" time="0.002">
    </testcase>
    <testcase classname="JobService terminal and in-progress status helpers isJobInProgress should return false for COMPLETED, FAILED" name="JobService terminal and in-progress status helpers isJobInProgress should return false for COMPLETED, FAILED" time="0.003">
    </testcase>
    <testcase classname="JobService terminal and in-progress status helpers isJobTerminal should return true for COMPLETED, FAILED" name="JobService terminal and in-progress status helpers isJobTerminal should return true for COMPLETED, FAILED" time="0.002">
    </testcase>
    <testcase classname="JobService terminal and in-progress status helpers isJobTerminal should return false for QUEUED, PROCESSING, EDITING" name="JobService terminal and in-progress status helpers isJobTerminal should return false for QUEUED, PROCESSING, EDITING" time="0.003">
    </testcase>
    <testcase classname="JobService batch job operations createBatchJob should create batch job with required fields" name="JobService batch job operations createBatchJob should create batch job with required fields" time="0.009">
    </testcase>
    <testcase classname="JobService batch job operations incrementBatchJobProgress should increment completedCount" name="JobService batch job operations incrementBatchJobProgress should increment completedCount" time="0.012">
    </testcase>
    <testcase classname="JobService batch job operations incrementBatchJobProgress should mark batch as COMPLETED when all jobs complete" name="JobService batch job operations incrementBatchJobProgress should mark batch as COMPLETED when all jobs complete" time="0.018">
    </testcase>
    <testcase classname="JobService batch job operations getJobsByBatchId should query jobs by batchJobId using GSI" name="JobService batch job operations getJobsByBatchId should query jobs by batchJobId using GSI" time="0.007">
    </testcase>
    <testcase classname="JobService batch job operations getJobsByBatchId should return empty array when no jobs found" name="JobService batch job operations getJobsByBatchId should return empty array when no jobs found" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="S3KeyStrategyImpl" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="6.938" tests="16">
    <testcase classname="S3KeyStrategyImpl generateTempKey should generate temp key with correct structure" name="S3KeyStrategyImpl generateTempKey should generate temp key with correct structure" time="0.01">
    </testcase>
    <testcase classname="S3KeyStrategyImpl generateTempKey should sanitize filename" name="S3KeyStrategyImpl generateTempKey should sanitize filename" time="0.003">
    </testcase>
    <testcase classname="S3KeyStrategyImpl generateFinalKey should generate final key with correct structure" name="S3KeyStrategyImpl generateFinalKey should generate final key with correct structure" time="0.002">
    </testcase>
    <testcase classname="S3KeyStrategyImpl generateFinalKey should sanitize filename" name="S3KeyStrategyImpl generateFinalKey should sanitize filename" time="0.002">
    </testcase>
    <testcase classname="S3KeyStrategyImpl parseTempKey should parse valid temp key" name="S3KeyStrategyImpl parseTempKey should parse valid temp key" time="0.002">
    </testcase>
    <testcase classname="S3KeyStrategyImpl parseTempKey should return null for invalid temp key" name="S3KeyStrategyImpl parseTempKey should return null for invalid temp key" time="0.002">
    </testcase>
    <testcase classname="S3KeyStrategyImpl parseFinalKey should parse valid final key" name="S3KeyStrategyImpl parseFinalKey should parse valid final key" time="0.002">
    </testcase>
    <testcase classname="S3KeyStrategyImpl parseFinalKey should return null for invalid final key" name="S3KeyStrategyImpl parseFinalKey should return null for invalid final key" time="0.003">
    </testcase>
    <testcase classname="S3Service generatePresignedUpload should return presigned upload with correct fields" name="S3Service generatePresignedUpload should return presigned upload with correct fields" time="0.013">
    </testcase>
    <testcase classname="S3Service generatePresignedUpload should include metadata in presigned URL" name="S3Service generatePresignedUpload should include metadata in presigned URL" time="0.004">
    </testcase>
    <testcase classname="S3Service optimizeAndUploadImage should download, optimize with sharp, and upload image" name="S3Service optimizeAndUploadImage should download, optimize with sharp, and upload image" time="0.02">
    </testcase>
    <testcase classname="S3Service getObjectInfo should return object metadata when object exists" name="S3Service getObjectInfo should return object metadata when object exists" time="0.009">
    </testcase>
    <testcase classname="S3Service getObjectInfo should return null when object does not exist" name="S3Service getObjectInfo should return null when object does not exist" time="0.009">
    </testcase>
    <testcase classname="S3Service getObjectInfo should throw for other S3 errors" name="S3Service getObjectInfo should throw for other S3 errors" time="0.021">
    </testcase>
    <testcase classname="S3Service bucket getters should return temp bucket" name="S3Service bucket getters should return temp bucket" time="0.006">
    </testcase>
    <testcase classname="S3Service bucket getters should return final bucket" name="S3Service bucket getters should return final bucket" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DeviceTokenService" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:06" time="1.051" tests="27">
    <testcase classname="DeviceTokenService Constructor should initialize with table name and region" name="DeviceTokenService Constructor should initialize with table name and region" time="0.008">
    </testcase>
    <testcase classname="DeviceTokenService Constructor should accept custom DynamoDB client" name="DeviceTokenService Constructor should accept custom DynamoDB client" time="0.004">
    </testcase>
    <testcase classname="DeviceTokenService registerDeviceToken should successfully register a new device token" name="DeviceTokenService registerDeviceToken should successfully register a new device token" time="0.016">
    </testcase>
    <testcase classname="DeviceTokenService registerDeviceToken should handle ConditionalCheckFailedException and update existing token" name="DeviceTokenService registerDeviceToken should handle ConditionalCheckFailedException and update existing token" time="0.013">
    </testcase>
    <testcase classname="DeviceTokenService registerDeviceToken should propagate non-conditional errors" name="DeviceTokenService registerDeviceToken should propagate non-conditional errors" time="0.024">
    </testcase>
    <testcase classname="DeviceTokenService registerDeviceToken should register Android device token" name="DeviceTokenService registerDeviceToken should register Android device token" time="0.013">
    </testcase>
    <testcase classname="DeviceTokenService updateDeviceToken should successfully update existing device token" name="DeviceTokenService updateDeviceToken should successfully update existing device token" time="0.023">
    </testcase>
    <testcase classname="DeviceTokenService updateDeviceToken should throw error when device token not found" name="DeviceTokenService updateDeviceToken should throw error when device token not found" time="0.013">
    </testcase>
    <testcase classname="DeviceTokenService updateDeviceToken should propagate DynamoDB errors" name="DeviceTokenService updateDeviceToken should propagate DynamoDB errors" time="0.008">
    </testcase>
    <testcase classname="DeviceTokenService updateDeviceToken should update platform when changed" name="DeviceTokenService updateDeviceToken should update platform when changed" time="0.01">
    </testcase>
    <testcase classname="DeviceTokenService getDeviceToken should retrieve existing device token" name="DeviceTokenService getDeviceToken should retrieve existing device token" time="0.007">
    </testcase>
    <testcase classname="DeviceTokenService getDeviceToken should return null when device token not found" name="DeviceTokenService getDeviceToken should return null when device token not found" time="0.006">
    </testcase>
    <testcase classname="DeviceTokenService getDeviceToken should use consistent read for strong consistency" name="DeviceTokenService getDeviceToken should use consistent read for strong consistency" time="0.006">
    </testcase>
    <testcase classname="DeviceTokenService getDeviceToken should handle DynamoDB errors" name="DeviceTokenService getDeviceToken should handle DynamoDB errors" time="0.007">
    </testcase>
    <testcase classname="DeviceTokenService getUserDeviceTokens should return empty array (simplified implementation)" name="DeviceTokenService getUserDeviceTokens should return empty array (simplified implementation)" time="0.005">
    </testcase>
    <testcase classname="DeviceTokenService getUserDeviceTokens should call DynamoDB with userId" name="DeviceTokenService getUserDeviceTokens should call DynamoDB with userId" time="0.013">
    </testcase>
    <testcase classname="DeviceTokenService deactivateDeviceToken should successfully deactivate device token" name="DeviceTokenService deactivateDeviceToken should successfully deactivate device token" time="0.006">
    </testcase>
    <testcase classname="DeviceTokenService deactivateDeviceToken should handle conditional check failure when token does not exist" name="DeviceTokenService deactivateDeviceToken should handle conditional check failure when token does not exist" time="0.007">
    </testcase>
    <testcase classname="DeviceTokenService deactivateDeviceToken should update timestamp when deactivating" name="DeviceTokenService deactivateDeviceToken should update timestamp when deactivating" time="0.005">
    </testcase>
    <testcase classname="DeviceTokenService deleteDeviceToken should successfully delete device token" name="DeviceTokenService deleteDeviceToken should successfully delete device token" time="0.007">
    </testcase>
    <testcase classname="DeviceTokenService deleteDeviceToken should handle conditional check failure when token does not exist" name="DeviceTokenService deleteDeviceToken should handle conditional check failure when token does not exist" time="0.006">
    </testcase>
    <testcase classname="DeviceTokenService deleteDeviceToken should include correct composite key in delete operation" name="DeviceTokenService deleteDeviceToken should include correct composite key in delete operation" time="0.004">
    </testcase>
    <testcase classname="DeviceTokenService deleteDeviceToken should handle DynamoDB errors" name="DeviceTokenService deleteDeviceToken should handle DynamoDB errors" time="0.006">
    </testcase>
    <testcase classname="DeviceTokenService Error Handling should handle network errors gracefully" name="DeviceTokenService Error Handling should handle network errors gracefully" time="0.005">
    </testcase>
    <testcase classname="DeviceTokenService Error Handling should handle malformed data errors" name="DeviceTokenService Error Handling should handle malformed data errors" time="0.01">
    </testcase>
    <testcase classname="DeviceTokenService Data Integrity should maintain consistent timestamp format" name="DeviceTokenService Data Integrity should maintain consistent timestamp format" time="0.005">
    </testcase>
    <testcase classname="DeviceTokenService Data Integrity should always set isActive to true for new registrations" name="DeviceTokenService Data Integrity should always set isActive to true for new registrations" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Lambda Import Smoke Tests" errors="0" failures="0" skipped="0" timestamp="2025-10-22T08:56:00" time="7.121" tests="6">
    <testcase classname="Lambda Import Smoke Tests Handler Import Tests presign lambda exports handler function" name="Lambda Import Smoke Tests Handler Import Tests presign lambda exports handler function" time="6.169">
    </testcase>
    <testcase classname="Lambda Import Smoke Tests Handler Import Tests status lambda exports handler function" name="Lambda Import Smoke Tests Handler Import Tests status lambda exports handler function" time="0.131">
    </testcase>
    <testcase classname="Lambda Import Smoke Tests Handler Import Tests worker lambda exports handler function" name="Lambda Import Smoke Tests Handler Import Tests worker lambda exports handler function" time="0.08">
    </testcase>
    <testcase classname="Lambda Import Smoke Tests Service Dependencies Import Tests services export expected classes" name="Lambda Import Smoke Tests Service Dependencies Import Tests services export expected classes" time="0.102">
    </testcase>
    <testcase classname="Lambda Import Smoke Tests Service Dependencies Import Tests core library exports expected modules" name="Lambda Import Smoke Tests Service Dependencies Import Tests core library exports expected modules" time="0.043">
    </testcase>
    <testcase classname="Lambda Import Smoke Tests Shared Module Import Tests shared schemas export expected validation schemas" name="Lambda Import Smoke Tests Shared Module Import Tests shared schemas export expected validation schemas" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="SeedreamProvider" errors="0" failures="6" skipped="0" timestamp="2025-10-22T08:56:00" time="66.496" tests="20">
    <testcase classname="SeedreamProvider Constructor and Configuration should initialize with provided config" name="SeedreamProvider Constructor and Configuration should initialize with provided config" time="0.01">
    </testcase>
    <testcase classname="SeedreamProvider Constructor and Configuration should apply timeout from PROVIDER_CONFIG when using defaults" name="SeedreamProvider Constructor and Configuration should apply timeout from PROVIDER_CONFIG when using defaults" time="0.003">
    </testcase>
    <testcase classname="SeedreamProvider editImage - Success Paths should successfully edit image with valid request" name="SeedreamProvider editImage - Success Paths should successfully edit image with valid request" time="0.014">
    </testcase>
    <testcase classname="SeedreamProvider editImage - Success Paths should use default editing instructions when not provided" name="SeedreamProvider editImage - Success Paths should use default editing instructions when not provided" time="0.002">
    </testcase>
    <testcase classname="SeedreamProvider editImage - Success Paths should include correct headers in API request" name="SeedreamProvider editImage - Success Paths should include correct headers in API request" time="0.002">
    </testcase>
    <testcase classname="SeedreamProvider editImage - Success Paths should send correct request payload" name="SeedreamProvider editImage - Success Paths should send correct request payload" time="0.003">
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should handle API error responses" name="SeedreamProvider editImage - Error Paths should handle API error responses" time="10.002">
      <failure>Error: thrown: &quot;Exceeded timeout of 10000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:204:5
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:198:3
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:18:1)
    at Runtime._execModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should handle missing edited image URL in response" name="SeedreamProvider editImage - Error Paths should handle missing edited image URL in response" time="10.001">
      <failure>Error: thrown: &quot;Exceeded timeout of 10000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:221:5
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:198:3
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:18:1)
    at Runtime._execModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should handle network errors" name="SeedreamProvider editImage - Error Paths should handle network errors" time="10.028">
      <failure>Error: thrown: &quot;Exceeded timeout of 10000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:237:5
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:198:3
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:18:1)
    at Runtime._execModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should return error when provider is disabled" name="SeedreamProvider editImage - Error Paths should return error when provider is disabled" time="0.002">
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should handle 500 server errors" name="SeedreamProvider editImage - Error Paths should handle 500 server errors" time="10.032">
      <failure>Error: thrown: &quot;Exceeded timeout of 10000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:259:5
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:198:3
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:18:1)
    at Runtime._execModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should handle 401 unauthorized errors" name="SeedreamProvider editImage - Error Paths should handle 401 unauthorized errors" time="10.038">
      <failure>Error: thrown: &quot;Exceeded timeout of 10000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:273:5
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:198:3
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:18:1)
    at Runtime._execModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="SeedreamProvider editImage - Error Paths should handle JSON parsing errors" name="SeedreamProvider editImage - Error Paths should handle JSON parsing errors" time="10.041">
      <failure>Error: thrown: &quot;Exceeded timeout of 10000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:288:5
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at /home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:198:3
    at _dispatchDescribe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:91:26)
    at describe (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/home/jeffreymoya/dev/photoeditor/backend/tests/unit/providers/seedream.provider.test.ts:18:1)
    at Runtime._execModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runtime@29.7.0/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-circus@29.7.0/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/jeffreymoya/dev/photoeditor/node_modules/.pnpm/jest-runner@29.7.0/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="SeedreamProvider isHealthy should return true when health endpoint responds successfully" name="SeedreamProvider isHealthy should return true when health endpoint responds successfully" time="0.002">
    </testcase>
    <testcase classname="SeedreamProvider isHealthy should return false when health endpoint fails" name="SeedreamProvider isHealthy should return false when health endpoint fails" time="0">
    </testcase>
    <testcase classname="SeedreamProvider isHealthy should return false when health endpoint throws error" name="SeedreamProvider isHealthy should return false when health endpoint throws error" time="0.002">
    </testcase>
    <testcase classname="SeedreamProvider isHealthy should return false when fetch throws non-Error exception" name="SeedreamProvider isHealthy should return false when fetch throws non-Error exception" time="0.001">
    </testcase>
    <testcase classname="SeedreamProvider getName should return provider name" name="SeedreamProvider getName should return provider name" time="0">
    </testcase>
    <testcase classname="SeedreamProvider Retry Behavior (via BaseProvider) should retry on transient failures and eventually succeed" name="SeedreamProvider Retry Behavior (via BaseProvider) should retry on transient failures and eventually succeed" time="0.012">
    </testcase>
    <testcase classname="SeedreamProvider Response Metadata should include resilience metadata in response" name="SeedreamProvider Response Metadata should include resilience metadata in response" time="0.002">
    </testcase>
  </testsuite>
</testsuites>