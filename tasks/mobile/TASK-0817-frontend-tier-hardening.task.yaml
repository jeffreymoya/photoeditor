# Lean template for LLM-executable tasks (token-optimized for solo developer)
# Copy to: tasks/<area>/TASK-<id>-<short-slug>.task.yaml
# See tasks/README.md for authoring guide
#
# Standards alignment:
# - standards/global.md (universal guardrails)
# - standards/AGENTS.md (tier taxonomy)
# - Tier-specific: backend-tier.md | frontend-tier.md | shared-contracts-tier.md | infrastructure-tier.md | cross-cutting.md
# - standards/testing-standards.md (coverage expectations)
#
# Note: Integration, E2E, and mutation tests are deferred for now in this
# repository. Keep coverage thresholds in place; do not add mutation/E2E
# requirements unless explicitly reintroduced by a future ADR/task.
# If the task is blocked by an unrelated issue, set status=blocked, fill blocked_reason,
# and author a separate unblocker task referenced via blocked_by.

schema_version: "1.0"
id: TASK-0817
title: "Close mobile frontend-tier compliance gaps"
status: blocked
blocked_reason: "Broken down into subtasks for manageable implementation. Task spans 20+ files across UI layer (tokens/icons), State layer (RTK Query/XState), Services layer (ports/adapters), and infrastructure (Storybook/Chromatic). Each subtask focuses on single architectural concern."
blocked_by: [TASK-0818, TASK-0819, TASK-0820, TASK-0821]
priority: P1
area: frontend

description: >-
  Alignment review on 2025-10-23 identified that the Expo client violates multiple
  standards/frontend-tier.md guardrails: screens own feature orchestration, reusable
  UI bypasses shared tokens, state management omits RTK Query/statecharts, and
  services skip required port/adapters plus fitness evidence. This task captures the
  remediation work so the solo-maintained frontend tier remains auditable.

outcome: >-
  Mobile code, tooling, and evidence artifacts satisfy frontend-tier fitness gates for
  layered features, UI tokens, state/statecharts, and services integration, and pass
  automated qa:static + mobile tests with Storybook/Chromatic reporting in place.

scope:
  in:
    - mobile/src/screens/**/*
    - mobile/src/features/upload/**/*
    - mobile/src/store/**/*
    - mobile/src/services/**/*
    - mobile/src/lib/ui-tokens.ts
    - mobile/storybook/**/*
    - docs/ui/**/*
    - Build/test configs needed for Storybook, Chromatic, RTK Query, XState exports, and service ports
  out:
    - Backend/shared contract schema shape changes
    - Infra automation for publishing Storybook beyond Chromatic integration
    - Non-mobile clients or web frontend

context:
  affected_packages: [mobile]
  standards_tier: frontend
  issues: []
  related_docs:
    - standards/AGENTS.md
    - standards/frontend-tier.md
    - standards/typescript.md
    - standards/testing-standards.md
    - ARCHITECTURE.md
  repo_paths:
    - mobile/src
    - mobile/package.json
    - mobile/storybook
    - docs/ui
  dependencies: []

environment:
  os: ubuntu-22.04
  runtimes:
    node: "18.x"
  tools:
    - name: npm
      version: "9.x"

constraints:
  approvals_required: false
  sandbox:
    filesystem: workspace-write
    network: enabled
  coding_guidelines:
    - Keep diffs minimal and focused
    - Respect repository conventions
  prohibited:
    - No secrets or tokens in code
    - No unrelated file changes

plan:
  - id: 1
    title: Finalize remediation design
    details: Map required structural changes for layering, tokens, RTK Query adoption, statecharts, and service ports; capture deltas vs standards.
    commands:
      - rg -n "Upload" mobile/src
      - tree -L 2 mobile/src/features
    expected_files_touched:
      - docs/ui/2025-frontend-tier-gap-analysis.md
  - id: 2
    title: Implement feature/UI layering updates
    details: Move upload orchestration into feature module with `/public` surface, refactor screens to consume features, and replace inline styles with shared tokens/lucide icons.
    commands:
      - pnpm turbo run lint --filter=photoeditor-mobile
    expected_files_touched:
      - mobile/src/screens/HomeScreen.tsx
      - mobile/src/features/upload/**/*
      - mobile/src/components/**/*
  - id: 3
    title: Reinforce state/services architecture
    details: Introduce RTK Query slices, XState charts + exports, and service ports with adapters; wire retry policies and Chromatic/Storybook tooling + evidence outputs.
    commands:
      - pnpm turbo run typecheck --filter=photoeditor-mobile
      - pnpm storybook -- --smoke-test
    expected_files_touched:
      - mobile/src/store/**/*
      - mobile/src/services/**/*
      - mobile/storybook/**/*
      - docs/ui/contracts/**/*
  - id: 4
    title: Backfill tests and evidence
    details: Add component/hook tests, story coverage reports, Chromatic snapshots, and update documentation including fitness artefact links.
    commands:
      - pnpm turbo run test --filter=photoeditor-mobile -- --coverage
      - pnpm chromatic --exit-zero-on-changes
    expected_files_touched:
      - mobile/src/__tests__/**/*
      - docs/ui/storybook/**/*

acceptance_criteria:
  - Screens delegate upload/edit orchestration to feature modules via `/public` exports; no cross-feature imports exist.
  - All React Native StyleSheet color/spacing tokens come from shared `ui-tokens` or lucide/react-native-svg primitives per standards/frontend-tier.md.
  - RTK Query slices + XState charts back job/upload state; `.scxml` or Mermaid exports stored under `docs/ui/state-metrics` with checksums.
  - Services expose ports under `mobile/src/services/*/port.ts` with adapters using `cockatiel` (or approved equivalent) for retry/circuit breaker.
  - Storybook stories cover ≥85% of atoms/molecules; Chromatic + axe CI gates run and evidence is archived in `docs/ui/storybook`.
  - No lint/type/test regressions; `pnpm turbo run qa:static --parallel` and mobile unit suites pass.
  modularity:
    - "Feature entry points export named APIs only; layers follow screens → feature → shared UI → hooks"
    - "Adapters encapsulate platform APIs; no direct Expo/Fetch usage in feature or component layers"
    - "No cross-layer imports (dependency-cruiser enforced)"
  testability:
    - "Mobile package line coverage ≥80% and branch coverage ≥70%"
    - "Storybook Chromatic run reports no unresolved diffs"

validation:
  # Grouped by test agent type for orchestration

  static_checks:
    - pnpm turbo run qa:static --parallel
    - pnpm turbo run lint --filter=photoeditor-mobile
    - pnpm turbo run typecheck --filter=photoeditor-mobile

  unit_tests:
    mobile:
      - pnpm turbo run test --filter=photoeditor-mobile -- --coverage --coverageThreshold='{"global":{"lines":80,"branches":70}}'

  contract_tests: []

  manual_checks:
    - Run Chromatic UI review and confirm a11y gate passes
    - Verify mobile Test Harness screen exercises Upload flow offline/online transitions

  artifacts:
    - screenshots: [docs/ui/storybook/chromatic-summary.png]

deliverables:
  - mobile/src/features/upload/public/index.ts
  - mobile/src/services/upload/port.ts
  - mobile/src/store/uploadApi.ts
  - mobile/storybook/**
  - docs/ui/storybook/**
  - docs/ui/state-metrics/upload-statechart.scxml

risks:
  - description: RTK Query/statechart adoption may introduce regressions in existing upload flow UX.
    mitigation: Maintain parity tests via mobile Test Harness, add regression unit tests, and verify with manual harness walkthrough.
  - description: Storybook/Chromatic integration could slow CI if misconfigured.
    mitigation: Use Chromatic async workflow with `--exit-zero-on-changes` locally; document caching strategy in task notes.

# Agent output artifacts:
# - task-picker writes: .agent-output/task-picker-summary-{TASK-ID}.md (work summary)
# - test agents write: docs/tests/reports/YYYY-MM-DD-{agent-type}.md (validation results)
# - task-runner creates: changelog/YYYY-MM-DD-{topic}.md (final changelog aggregating all above)
#
# Note: Only task-runner creates the changelog; task-picker focuses on implementation.
