{
  "$schema": "https://raw.githubusercontent.com/sverweij/dependency-cruiser/main/src/schema/configuration.schema.json",
  "forbidden": [
    {
      "name": "no-circular",
      "severity": "error",
      "comment": "Circular dependencies risk runtime issues and hamper refactors.",
      "from": {},
      "to": {
        "circular": true
      }
    },
    {
      "name": "backend-services-no-handlers",
      "severity": "error",
      "comment": "Services expose logic to handlers; they must not import the lambda layer.",
      "from": {
        "path": "^backend/src/services"
      },
      "to": {
        "path": "^backend/src/lambdas"
      }
    },
    {
      "name": "backend-providers-isolated",
      "severity": "error",
      "comment": "Providers are lowest-level adapters and must not depend on higher layers.",
      "from": {
        "path": "^backend/src/providers"
      },
      "to": {
        "path": "^backend/src/(lambdas|services)"
      }
    },
    {
      "name": "backend-handlers-no-providers",
      "severity": "error",
      "comment": "Handlers should resolve dependencies through services instead of talking to providers.",
      "from": {
        "path": "^backend/src/lambdas"
      },
      "to": {
        "path": "^backend/src/providers"
      }
    },
    {
      "name": "shared-package-framework-agnostic",
      "severity": "error",
      "comment": "Shared package must remain framework-agnostic (STANDARDS.md line 64).",
      "from": {
        "path": "^shared"
      },
      "to": {
        "path": "^(react|react-native|@nestjs|express|@aws-sdk)"
      }
    },
    {
      "name": "mobile-no-cross-feature-imports",
      "severity": "error",
      "comment": "Mobile features must not import from each other; use shared/public APIs (STANDARDS.md line 52).",
      "from": {
        "path": "^mobile/src/features/([^/]+)"
      },
      "to": {
        "path": "^mobile/src/features/(?!$1)[^/]+/(?!public)",
        "pathNot": "^mobile/src/features/[^/]+/public"
      }
    },
    {
      "name": "mobile-screens-layering",
      "severity": "error",
      "comment": "Mobile screens can only import from features (via /public), components, hooks, lib, services, store, utils (STANDARDS.md line 53).",
      "from": {
        "path": "^mobile/src/screens"
      },
      "to": {
        "pathNot": "^mobile/src/(features/.*/public|components|hooks|lib|services|store|utils|types|constants|navigation)"
      }
    },
    {
      "name": "mobile-features-no-screens",
      "severity": "error",
      "comment": "Mobile features must not import from screens (STANDARDS.md line 53).",
      "from": {
        "path": "^mobile/src/features"
      },
      "to": {
        "path": "^mobile/src/screens"
      }
    },
    {
      "name": "mobile-shared-ui-limited-imports",
      "severity": "error",
      "comment": "Shared UI components can only import from hooks, lib, and utils (STANDARDS.md line 53).",
      "from": {
        "path": "^mobile/src/components"
      },
      "to": {
        "path": "^mobile/src/(features|screens|services|store)"
      }
    },
    {
      "name": "mobile-hooks-limited-imports",
      "severity": "error",
      "comment": "Hooks can only import from lib and utils (STANDARDS.md line 53).",
      "from": {
        "path": "^mobile/src/hooks"
      },
      "to": {
        "path": "^mobile/src/(features|screens|services|store|components)"
      }
    },
    {
      "name": "no-lateral-imports",
      "severity": "error",
      "comment": "No lateral imports between layers (STANDARDS.md line 24).",
      "from": {
        "path": "^(backend/src|mobile/src)/(services|adapters|providers)/[^/]+"
      },
      "to": {
        "path": "^\\1/\\2/(?!.*$)"
      }
    }
  ],
  "options": {
    "includeOnly": "^backend/src|^shared|^mobile/src",
    "tsConfig": {
      "fileName": "./tooling/tsconfig.dependency-cruiser.json"
    },
    "doNotFollow": {
      "path": "node_modules"
    },
    "exclude": {
      "path": "dist|__tests__|\\.test\\.ts$|\\.spec\\.ts$"
    },
    "reporterOptions": {
      "dot": {
        "collapsePattern": "node_modules/[^/]+"
      },
      "metrics": {
        "hideModules": true,
        "hideFolders": true
      }
    }
  }
}
